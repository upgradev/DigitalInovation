Parte 1 - Paradigma funcional no java

    funcional - processo de construir software atraves de composição de funções puras,
    evitando compartilhamento de estados, dados mutaveis e efeitos colaterais. É declarativa
    ao invés de imperativa;
    damos uma regra, uma declaração de como queremos que o programa se comporte;

    Imperativo - expressa o codigo atraves de comandos ao computador, nele é possível ter 
    controle de estados do objeto

    1.1 - conceitos fundamentais da programação funcional
    composição de funções - criar uma nova função atraves da composição de outras
    funções puras - quando invoca mais de uma vez produz exatamente o mesmo resultado
    imutabilidade: uma vez que uma variavel que recebeu um valor, vai possuir esse valor para sempre,
    ou quando criamos um objeto ele não pode ser modificado

Parte 2 - Lambda no java

    obedecem os conceitos de Paradigma funcional;
    podemos facilitar legibilidade do nosso codigo,
    alem disso com a nova api funcional do java podemos ter
    uma alta produtividade para lidar com objetos.
    Principalmente, devemos entender o que são interfaces funcionais

    interface funcional - apresenta apenas um metodo de implementação

    quando o Lambda possui apenas uma instrução não é necessario no corpo de sua logica o uso de chaves

Parte 3 - Recursividade
    função chama si mesmo repetidamente, ate atingir uma condição de parada
    papel importante na funcional, facilitando que evitemos estados mutaveis e mantenhamos nosso programa mais declarativo e menos imperativo
    tail call - recursão em cauda é uma recursão onde não ha nenhuma linha de codigo apos chamado do proprio
    metodo e sendo assim, não ha nenhum tipo de processamento a ser feito apos a chamada recursiva, (a jvm não suporte)

    memoization: tecnica de otimização que consiste no cache do resultado de uma função, baseado nos parametros de entrada,
    com isso nas seguintes execuções conseguimos ter uma resposta mais rapida