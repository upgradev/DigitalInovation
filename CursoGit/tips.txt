sistema de versionamento de codigo distribuido

beneficios:
    controle de versão
    armazenamento em nuvem
    trabalho em equipe
    melhorar seu codigo
    reconhecimento

/////////////// navegação via command interface e instalação
cli -> comand line interface
gui -> graphic user interface


/////////////// Tópicos fundamentais para entender o funcionamento do Git
SHA1
-Algoritmo de hash seguro, conjunto de funções hash criptograficas, possui 40 dígitos
-echo "ola mundo" | openssl sha1 : (stdin)=hash
-comandos:
-openssl sha1 texto.txt -> mostra o hash que gerou, para verificar que cada vez que gerar o comando do arquivo
mostra o hsh diferente

Objetos funcamentais
-blobs - bloco basico, arquivos
echo 'conteudo' | git hash-object --stdin : mostra o hash do conteudo
echo -e 'blob 9/0conteudo' | openssl sha1 : mostra o hash do comando anterior

-trees 
    armazena os blobs, como diretorios
    armazena e aponta
    arvore que armazena metadados
    guarda o nome do arquivo
    tem um sha1

-commits
    juntar tudo, 
    aponta para uma arvore, parente autor e mensagem


Sistema Distribuido

Segurança


Chave SSH e Token
chave SSH : comunicação entre local e servidor com duas chaves publica e privada
criar chaves:
    ssh-keygen -t ed25519 -C email
    dar enter
    entrar com uma senha

    inicializar ssh agent:
        eval $(ssh-agent -s)
    entregar a chave para o agent
        ssh-add chave_privada

clonar pelo ssh:
    git clone caminho_ssh

Chave pelo Token:
    ir no github e depois ir no developer settings
    escolher Personal Acess token
    copiar o token

clonar pelo token:
    ir no link do https
    git clone link_https


----- comandos git
git init -> iniciar o git, para gerenciar
    git config --global user.name "seu nome"
    git config --global user.email "seu email"

arquivo Makdown -> para um html mais facil para o usuario

git add  ->
git commit ->